package com.pst.blg;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.security.GeneralSecurityException;
import java.util.Arrays;
import java.util.List;

import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.google.api.client.http.HttpTransport;
import com.google.api.client.http.javanet.NetHttpTransport;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.gdata.client.GoogleService;
import com.google.gdata.client.blogger.BloggerService;
import com.google.gdata.client.http.AuthSubUtil;
import com.google.gdata.data.Feed;
import com.google.gdata.model.atom.Entry;
import com.google.gdata.util.AuthenticationException;
import com.google.gdata.util.ServiceException;

/*
 * Google Blogger Authentication
 * Author:  Patrick Cook
 * Orig Date:  2015-05-30
 * Description:  Logging in to Blogger via API
-------------------------------------------------

The application uses three login methods: 

1.  Username Password:  uses the gdata-blogger-2.0.jar located in gdata-samples
{GData_HOME}\gdata-samples.java-1.47.1\gdata\java\lib

2.  OAuth Token

3.  ClientLogin Authentication

NOTE: The method used is dictated by the constructor

 */

public class Authentication {
	String SERVICENAME = "blogThePlanent-netApp-1";
	String METAFEED_URL = "http://www.blogger.com/feeds/default/blogs";
	String FEED_URI_BASE = "http://www.blogger.com/feeds";
	String POSTS_FEED_URI_SUFFIX = "/posts/default";
	String COMMENTS_FEED_URI_SUFFIX = "/comments/default";
	String next = "https://developers.google.com/oauthplayground";
	String scope = "http://www.blogger.com/feeds/";
	boolean secure = false;
	boolean session = true;
	

	public Authentication()
	{
		
		
		
	}
	
	public GoogleCredential oAuthNLogin()
	{
		String authSubLogin = AuthSubUtil.getRequestUrl(next, scope, secure, session);
		GoogleCredential credential = null;
		String clientID = "838560167308-niq2t1p3av33m9er7vrkutgi1oj3opqi.apps.googleusercontent.com";
		String clientSecret = "DtyVMfWhwEFHuesbsJEvQBD3";
		String refreshToken = "1/alNnLa9mWgIg-IMROlaaYjdnoJuVdRrpfnJKmYbShH0";
		String accessToken ="ya29.hwG92UhoodnGZnO-0PZAVZVx8vKrV0dx5NinRKOe4PvHFuiIm3k-9xo_qVenu1cEKuKnRjZpHJfJ8Q";
		URL FEED_URL;
        try {
			FEED_URL = new URL("http://www.blogger.com/feeds/default/blogs");
		} catch (MalformedURLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

        HttpTransport httpTransport = new NetHttpTransport();
        JacksonFactory jsonFactory = new JacksonFactory();
        try {
			credential = new GoogleCredential.Builder()
			        .setTransport(httpTransport)
			        .setJsonFactory(jsonFactory)
			        .setClientSecrets(clientID, clientSecret)
			        .build();
			
			credential.setRefreshToken(refreshToken);
			
		//} catch (Exception e) {
			// TODO Auto-generated catch block
			//e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        try {
			credential.refreshToken();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
        GoogleService myService = new GoogleService("blogger", "exampleCo-exampleApp-1");
        String sessionToken  = null;
        
        String token = AuthSubUtil.getTokenFromReply(accessToken);
        try {
			sessionToken = AuthSubUtil.exchangeForSessionToken(token, null);
		} catch (AuthenticationException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (GeneralSecurityException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
        
        URL feedUrl = null;
		try {
			feedUrl = new URL(METAFEED_URL);
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        Feed resultFeed = null;
		try {
			resultFeed = myService.getFeed(feedUrl, Feed.class);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ServiceException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

        // If the user has a blog then return the id (which comes after 'blog-')
        if (resultFeed.getEntries().size() > 0) {
          com.google.gdata.data.Entry entry = resultFeed.getEntries().get(0);
          System.out.println("ENTRY:  " + entry.getId().split("blog-")[1]);
        }
        try {
			throw new IOException("User has no blogs!");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return credential;
	}
		
}
