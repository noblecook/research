namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dcterms:title [ "The RuleML Object Identifier" ]
dcterms:identifier [ "http://deliberation.ruleml.org/1.02/relaxng/modules/oid_expansion_module.rnc" ]
dcterms:isPartOf [ "http://deliberation.ruleml.org/1.02/spec" ]
dcterms:creator [ "http://wiki.ruleml.org/index.php/User:Athant" ]
dc:subject [ "RuleML, object identifier" ]
dcterms:description [ "The expansion module for object identifiers." ]
dcterms:language [ "en" ]
dc:rights [
  'Copyright 2015 RuleML Inc. -- Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.'
]
dcterms:rights [ "http://ruleml.org/licensing/RSL1.0-RuleML" ]
dcterms:relation [ "http://deliberation.ruleml.org" ]
start |= oid.edge.def
edge.choice |= oid.edge.def
# This module declares the following RuleML elements and attributes:
#            * <oid>

## an extension point for stripe skipping as well as specializations of the object identifier tag name.  
objectIdentifier-edge.choice |= oid.edge.def

## An optional object identifier for an atomic formula, expression or the unifed terms
##  of the SWSL branch, as needed for PSOA semantics. 
## Note that oids are not required to be unique within a rulebase.
oid.edge.def =
  
  ## <oid>: a label for Node elements. See 
  ## http://deliberation.ruleml.org/1.02/glossary/#gloss-oid
  element oid { oid.type.def }
oid.type.def = oid.attlist? & oid.content
oid.attlist &= commonInit.attlist?

## The object descriptor content model consists of any single term.
## Note: this corrects an error in the oid content model of RuleML 1.0,
## where Var is allowed in oid in bindatagroundlog and bindatagroundfact.
oid.content |= AnyTerm.choice
# For the declaration of the term patterns, see the term module (individual_expansion_module)
#
