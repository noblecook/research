namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dcterms:title [ "Consumer RuleML Time" ]
dcterms:identifier [ "http://consumer.ruleml.org/1.02/relaxng/modules/consumer_time_expansion_module.rnc" ]
dcterms:isPartOf [ "http://consumer.ruleml.org/1.02/spec" ]
dcterms:creator [ "http://wiki.ruleml.org/index.php/User:Athant" ]
dcterms:creator [ "http://wiki.ruleml.org/index.php/User:Paschkea" ]
dc:subject [ "RuleML, Consumer, Deliberation, Time" ]
dcterms:description [ "The expansion module for temporal entities in Consumer RuleML." ]
dcterms:language [ "en" ]
dc:rights [
  'Copyright 2015 RuleML Inc. -- Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.'
]
dcterms:rights [ "http://ruleml.org/licensing/RSL1.0-RuleML" ]
dcterms:relation [ "http://consumer.ruleml.org" ]
# This module declares the following Consumer RuleML elements:
#   * arg
#   * Time
start |= Time_formula.Node.def
start |= Time_term.Node.def
#
Node.choice |= Time_formula.Node.def
Node.choice |= Time_term.Node.def
edge.choice |= arg_time.edge.def

##
Time_term-node.choice |= Time_term.Node.def
Time_term.Node.def =
  
  ## <Time>: generic Time element. See
  ## http://consumer.ruleml.org/1.02/glossary/#gloss-Time
  element Time { Time_term.type.def }
Time_term.type.def = Time_term.attlist & Time_term.content
Time_term.attlist &= commonNode.attlist?
Time_term.attlist &= type-att.choice?
Time_term.content |= Time_term.header, argumentsForTime.sequence
Time_term.header &= Expr.header?
#
Time_formula-node.choice |= Time_formula.Node.def
Time_formula.Node.def = element Time { Time_formula.type.def }
Time_formula.type.def = Time_formula.attlist & Time_formula.content
Time_formula.attlist &= commonNode.attlist?
Time_formula.attlist &= formula-interface.attlist?
Time_formula.attlist &= type-att.choice?
#
Time_formula.content |= Time_formula.header, argumentsForTime.sequence
Time_formula.header &= Atom.header?

## Usage in choice patterns
SimpleKeyTerm.choice |= Time_term.Node.def
Atom-node.choice |= Time_formula.Node.def

##
arg_time-edge.choice |= arg_time.edge.def
arg_time.edge.def = element arg { arg_time.type.def }
arg_time.type.def = index-attrib.choice & arg_time.attlist & arg_time.content
arg_time.attlist &= commonInit.attlist?
arg_time.content |= time_primitives.content

## An internal group for the time primitives for interpretation as time
time_primitives.content |= arg.content
