namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dcterms:title [ "RuleML Initializing Base Patterns" ]
dcterms:identifier [ "http://deliberation.ruleml.org/1.02/relaxng/modules/init_expansion_module.rnc" ]
dcterms:isPartOf [ "http://deliberation.ruleml.org/1.02/spec" ]
dcterms:creator [ "http://wiki.ruleml.org/index.php/User:Athant" ]
dc:subject [ "RuleML, initialize, base patterns" ]
dcterms:description [ "expansion module for initializing base patterns." ]
dcterms:language [ "en" ]
dc:rights [
  'Copyright 2015 RuleML Inc. -- Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.'
]
dcterms:rights [ "http://ruleml.org/licensing/RSL1.0-RuleML" ]
dcterms:relation [ "http://deliberation.ruleml.org" ]
# The patterns defined in this module are extension points of the Deliberation RuleML syntax.
# Those patterns defined using a choice definition symbol (|=) can be extended by alternatives.
# Those patterns defined using an interleave definitoin symbol (&=) can be extended as an interleaved sequence.
start |= notAllowed
# 
# Content Models of Edges
# The name of the edge appears first, up to the first "_".
# If the content model of the edge is context dependent, the name of the parent element
# appears after the first "_", up to a "." or a "-".
# Note that by convention, RuleML does not use "_" or "-" or "." in element names.
# Patterns relevant to the same edge/parent combination are distinguished by a "-" following
# .content
act.content |= notAllowed
arg.content |= notAllowed
op_Atom.content |= notAllowed
op_Expr.content |= notAllowed
head_Implies.content |= notAllowed
body_Implies.content |= notAllowed
head_Entails.content |= notAllowed
body_Entails.content |= notAllowed
torso.content |= notAllowed
left.content |= notAllowed
right.content |= notAllowed
formula_And.content |= notAllowed
formula_And-head.content |= notAllowed
formula_Or.content |= notAllowed
formula_Or-head.content |= notAllowed
formula_Forall.content |= notAllowed
formula_Exists.content |= notAllowed
formula_Exists-head.content |= notAllowed
formula_AssertRetract.content |= notAllowed
formula_Query.content |= notAllowed
formula_Rulebase.content |= notAllowed
declare.content |= notAllowed
weak.content |= notAllowed
strong.content |= notAllowed
Rel.content |= notAllowed
Fun.content |= notAllowed
Var.content |= notAllowed
Ind.content |= notAllowed
oid.content |= notAllowed
repo.content |= notAllowed
resl.content |= notAllowed
# Nonlinear Interaction of Stripe-skipping and Positional Independence
body_Implies-ss.content |= notAllowed
head_Implies-ss.content |= notAllowed
body_Entails-ss.content |= notAllowed
head_Entails-ss.content |= notAllowed
# 
# ATTRIBUTE LISTS
reAnd.attlist &= empty
# reAnd-Query.attlist &= empty
formula_And.attlist &= empty
reOr.attlist &= empty
# reOr-Query.attlist &= empty
formula_Or.attlist &= empty
# reAtom.attlist &= empty
# op_Atom.attlist &= empty
# reRel.attlist &= empty
# oid.attlist &= empty
reData.attlist &= empty
# reEqual.attlist &= empty
# left.attlist &= empty
# right.attlist &= empty
# reEquivalent.attlist &= empty
# torso.attlist &= empty
reExpr.attlist &= empty
# reFun.attlist &= empty
# op_Expr.attlist &= empty
# degree.attlist &= empty
# reImplies.attlist &= empty
# body_Implies.attlist &= empty
# head_Implies.attlist &= empty
# rearg.attlist &= empty
# reInd.attlist &= empty
# reEntails.attlist &= empty
# body_Entails.attlist &= empty
# head_Entails.attlist &= empty
# reNaf.attlist &= empty
# weak.attlist &= empty
# reNeg.attlist &= empty
# strong.attlist &= empty
# reRuleML.attlist &= empty
# react.attlist &= empty
# reAssertRetract.attlist &= empty
# reQuery.attlist &= empty
# formula_AssertRetract.attlist &= empty
# formula_Query.attlist &= empty
# rePlex.attlist &= empty
# reForall.attlist &= empty
reExists.attlist &= empty
# declare.attlist &= empty
# formula_Forall.attlist &= empty
formula_Exists.attlist &= empty
# Reify-any.attlist &= empty
# Reify.attlist &= empty
# Reify-node.attlist &= empty
# reRulebase.attlist &= empty
# formula_Rulebase.attlist &= empty
# reSkolem.attlist &= empty
# reslot.attlist &= empty
# reVar.attlist &= empty
# repo.attlist &= empty
# resl.attlist &= empty
# weight.attlist &= empty
commonNode.attlist &= commonInit.attlist?
commonInit.attlist &= empty
Resource.attlist &= empty
Type.attlist &= empty
xmlbase.attlist &= empty
xmlid.attlist &= empty
# 
# SEQUENCES
slotTermsForAtoms.sequence |= empty
slotTermsForExpressions.sequence |= empty
termsForAtoms.sequence |= empty
termsForExpressions.sequence |= empty
slotsForExpressions.sequence |= empty
argumentsForExpressions.sequence |= empty
positionalArgumentsForExpressions.sequence |= empty
# 
# HEADERS
TruthValuedConnective.header &= empty
Node.header &= empty
And.header &= empty
Atom.header &= empty
Expr.header &= empty
Equal.header &= empty
Equivalent.header &= empty
Exists.header &= empty
Forall.header &= empty
Implies.header &= empty
Neg.header &= empty
Naf.header &= empty
Or.header &= empty
# 
# MAIN
And.main |= notAllowed
Atom.main |= notAllowed
Equal.main |= notAllowed
Expr.main |= notAllowed
Equivalent.main |= notAllowed
Exists.main |= notAllowed
Forall.main |= notAllowed
Implies.main |= notAllowed
Entails.main |= notAllowed
Naf.main |= notAllowed
Neg.main |= notAllowed
Or.main |= notAllowed
# 
# ATTRIBUTES
cardinality-att.choice |= notAllowed
closure-att.choice |= notAllowed
closure-att-fo.choice |= notAllowed
mapClosure-att.choice |= notAllowed
mapClosure-att-fo.choice |= notAllowed
direction-att.choice |= notAllowed
direction-att-inf.choice |= notAllowed
mapDirection-att.choice |= notAllowed
mapDirection-att-inf.choice |= notAllowed
mapDirection-att-fo.choice |= notAllowed
interpretation-att.choice |= notAllowed
interpretation-att-inf.choice |= notAllowed
material-att.choice |= notAllowed
material-att-inf.choice |= notAllowed
mapMaterial-att.choice |= notAllowed
mapMaterial-att-inf.choice |= notAllowed
mapMaterial-att-fo.choice |= notAllowed
oriented-att.choice |= notAllowed
oriented-att-inf.choice |= notAllowed
singlevalued-att.choice |= notAllowed
singlevalued-att-inf.choice |= notAllowed
weight-att.choice |= notAllowed
# 
# ATTRIBUTES WITH DEFAULT VALUES
And-datt.choice |= notAllowed
Or-datt.choice |= notAllowed
And-Query-datt.choice |= notAllowed
Or-Query-datt.choice |= notAllowed
Atom-datt.choice |= empty
Equal-datt.choice |= notAllowed
Equivalent-datt.choice |= notAllowed
Expr-datt.choice |= notAllowed
Implies-datt.choice |= notAllowed
Entails-datt.choice |= empty
Rulebase-datt.choice |= notAllowed
Naf-datt.choice |= notAllowed
Neg-datt.choice |= notAllowed
RuleML-datt.choice |= empty
AssertRetract-datt.choice |= notAllowed
Query-datt.choice |= notAllowed
Plex-datt.choice |= empty
Forall-datt.choice |= notAllowed
Exists-datt.choice |= notAllowed
Rel-datt.choice |= empty
Fun-datt.choice |= notAllowed
Var-datt.choice |= empty
Ind-datt.choice |= empty
slot-datt.choice |= empty
Data-datt.choice |= empty
Skolem-datt.choice |= empty
arg-datt.choice |= notAllowed
# 
# EDGE ATTRIBUTE CHOICE PATTERNS
formula_Or-datt.choice |= notAllowed
formula_And-datt.choice |= notAllowed
# 
# TERM CHOICE PATTERNS
DataTerm.choice |= notAllowed
SimpleKeyTerm.choice |= notAllowed
SimpleConstantTerm.choice |= notAllowed
CompoundKeyTerm.choice |= notAllowed
CompoundTerm.choice |= notAllowed
IrregularKeyTerm.choice |= notAllowed
AnyTerm.choice |= notAllowed
leftTerm.choice |= notAllowed
rightTerm.choice |= notAllowed
slotKeyTerm.choice |= notAllowed
slotFillerTerm.choice |= notAllowed
SimpleQuantifiableTerm.choice |= notAllowed
repoTerm.choice |= notAllowed
reslTerm.choice |= notAllowed
SequenceMarker.choice |= notAllowed
SlotSequenceMarker.choice |= notAllowed
anyElement.choice |= notAllowed
# 
# Node renaming and internationalizatio
And-node.choice |= notAllowed
And-head-node.choice |= notAllowed
And-fo-node.choice |= notAllowed
And-Query-node.choice |= notAllowed
Or-node.choice |= notAllowed
Or-head-node.choice |= notAllowed
Or-dis-node.choice |= notAllowed
Or-fo-node.choice |= notAllowed
Or-Query-node.choice |= notAllowed
SimpleFormula-node.choice |= notAllowed
Atom-node.choice |= notAllowed
Data_any-node.choice |= notAllowed
Data_simple-node.choice |= notAllowed
Equal-node.choice |= notAllowed
Equal-head-node.choice |= notAllowed
Equal-fo-node.choice |= notAllowed
Equivalent-node.choice |= notAllowed
Expression-node.choice |= notAllowed
Implication-node.choice |= notAllowed
Implication-head-node.choice |= notAllowed
Implication-fo-node.choice |= notAllowed
Rulebase-node.choice |= notAllowed
Entails-node.choice |= notAllowed
NegationAsFailure-node.choice |= notAllowed
Negation-node.choice |= notAllowed
Negation-head-node.choice |= notAllowed
Negation-fo-node.choice |= notAllowed
Plex_Any-node.choice |= notAllowed
Plex_repo-node.choice |= notAllowed
Plex_resl-node.choice |= notAllowed
Forall-node.choice |= notAllowed
Forall-head-node.choice |= notAllowed
Forall-fo-node.choice |= notAllowed
Exists-node.choice |= notAllowed
Exists-head-node.choice |= notAllowed
Exists-fo-node.choice |= notAllowed
Variable-node.choice |= notAllowed
Reify-node.choice |= notAllowed
Skolem-node.choice |= notAllowed
#
NegationAsFailure-node.notallowed = notAllowed
# 
# FORMULA CHOICE PATTERNS
ConclusionFormula.choice |= notAllowed
RulebaseFormula.choice |= notAllowed
QueryFormula.choice |= notAllowed
AssertRetractFormula.choice |= notAllowed
# 
# role re-naming and stripe-skipping choice patterns
operatorForAtoms-edge.choice |= notAllowed
objectIdentifier-edge.choice |= notAllowed
exprObjectIdentifier-edge.choice |= notAllowed
metaKnowledge-edge.choice |= notAllowed
operatorForExpressions-edge.choice |= notAllowed
degree-edge.choice |= notAllowed
body_Implies.name.choice |= notAllowed
head_Implies.name.choice |= notAllowed
body_Entails.name.choice |= notAllowed
head_Entails.name.choice |= notAllowed
restOfPositionalArguments-edge.choice |= notAllowed
restOfSlots-edge.choice |= notAllowed
positionalArgument-edge.choice |= notAllowed
slot-edge.choice |= notAllowed
#
boundVariables.choice |= notAllowed
# 
# ATTRIBUTE VALUES
cardinality.value |= notAllowed
closure.value |= notAllowed
direction.value |= notAllowed
direction_default.value |= notAllowed
direction_non-default.value |= notAllowed
interpretation.value |= notAllowed
interpretation_default.value |= notAllowed
interpretation_non-default.value |= notAllowed
iri.value |= notAllowed
material.value |= notAllowed
material_default.value |= notAllowed
material_non-default.value |= notAllowed
oriented.value |= notAllowed
oriented_default.value |= notAllowed
oriented_non-default.value |= notAllowed
type.value |= notAllowed
val.value |= notAllowed
val_default.value |= notAllowed
val_non-default.value |= notAllowed
# .datatype
AbsIRI.datatype |= notAllowed
PrefixedCURIE.datatype |= notAllowed
# 
# Choice patterns for all Nodes, all edges.
# Used for start and Reify
Node.choice |= notAllowed
edge.choice |= notAllowed
# 
# -attrib.choice
index-attrib.choice |= notAllowed
# .nonemptysequence
termsForAtoms.nonemptysequence.choice |= notAllowed
termsForExpressions.nonemptysequence.choice |= notAllowed
anySimpleType.value |= notAllowed
duration.value |= notAllowed
dateTime.value |= notAllowed
time.value |= notAllowed
date.value |= notAllowed
gYearMonth.value |= notAllowed
gYear.value |= notAllowed
gMonthDay.value |= notAllowed
gDay.value |= notAllowed
gMonth.value |= notAllowed
boolean.value |= notAllowed
base64Binary.value |= notAllowed
hexBinary.value |= notAllowed
float.value |= notAllowed
decimal.value |= notAllowed
double.value |= notAllowed
anyURI.value |= notAllowed
QName.value |= notAllowed
NOTATION.value |= notAllowed
String.value |= notAllowed
normalizedString.value |= notAllowed
Token.value |= notAllowed
language.value |= notAllowed
Name.value |= notAllowed
NCName.value |= notAllowed
NMTOKEN.value |= notAllowed
NMTOKENS.value |= notAllowed
ENTITY.value |= notAllowed
ENTITIES.value |= notAllowed
integer.value |= notAllowed
nonPositiveInteger.value |= notAllowed
negativeInteger.value |= notAllowed
long.value |= notAllowed
int.value |= notAllowed
short.value |= notAllowed
byte.value |= notAllowed
nonNegativeInteger.value |= notAllowed
unsignedLong.value |= notAllowed
unsignedInt.value |= notAllowed
unsignedByte.value |= notAllowed
positiveInteger.value |= notAllowed
# 
# a dummy element to assist in XSD conversion
#
DummyCommonElement.def = element DummyCommon { commonInit.attlist }
