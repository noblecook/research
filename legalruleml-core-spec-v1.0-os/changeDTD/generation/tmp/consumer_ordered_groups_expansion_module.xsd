<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://ruleml.org/spec" xmlns:ruleml="http://ruleml.org/spec" xmlns:lrml="http://docs.oasis-open.org/legalruleml/ns/v1.0/">
  <xs:import namespace="http://docs.oasis-open.org/legalruleml/ns/v1.0/" schemaLocation="lrml-normal.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml_module.xsd"/>
  <!--
    
    ORDER MODE - UNORDERED GROUPS DISABLED
    
    allowing the operator in Atom to be optional
  -->
  <!-- allowing the operator in Expr to be optional -->
  <!-- adding patterns for spatial-temporal individuals -->
  <xs:group name="argumentsForTime.sequence">
    <xs:choice>
      <xs:sequence>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="ruleml:arg_time-edge.choice"/>
        <xs:group minOccurs="0" ref="ruleml:restOfPositionalArguments-edge.choice"/>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="ruleml:slot-edge.choice"/>
        <xs:group minOccurs="0" ref="ruleml:restOfSlots-edge.choice"/>
      </xs:sequence>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="ruleml:time_anycontent-edge.choice"/>
    </xs:choice>
  </xs:group>
  <xs:group name="argumentsForSpatial.sequence">
    <xs:choice>
      <xs:sequence>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="ruleml:arg_spatial-edge.choice"/>
        <xs:group minOccurs="0" ref="ruleml:restOfPositionalArguments-edge.choice"/>
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="ruleml:slot-edge.choice"/>
        <xs:group minOccurs="0" ref="ruleml:restOfSlots-edge.choice"/>
      </xs:sequence>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="ruleml:spatial_anycontent-edge.choice"/>
    </xs:choice>
  </xs:group>
  <!--
    
    *** Derivation Rule content model ***
  -->
  <xs:group name="Rule.main">
    <xs:sequence>
      <xs:group ref="ruleml:if_Rule-edge.choice"/>
      <xs:group ref="ruleml:then_Rule-edge.choice"/>
    </xs:sequence>
  </xs:group>
  <!---->
  <xs:group name="Rule.header">
    <xs:sequence>
      <xs:sequence minOccurs="0">
        <xs:group ref="ruleml:Node.header"/>
        <xs:group minOccurs="0" ref="ruleml:degree-edge.choice"/>
      </xs:sequence>
    </xs:sequence>
  </xs:group>
</xs:schema>
