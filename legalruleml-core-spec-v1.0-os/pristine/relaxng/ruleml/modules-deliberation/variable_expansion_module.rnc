namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dcterms:title [ "RuleML Variables" ]
dcterms:identifier [ "http://deliberation.ruleml.org/1.02/relaxng/modules/variable_expansion_module.rnc" ]
dcterms:isPartOf [ "http://deliberation.ruleml.org/1.02/spec" ]
dcterms:creator [ "http://wiki.ruleml.org/index.php/User:Athant" ]
dc:subject [ "RuleML, variables, interpretable names" ]
dcterms:description [ "The expansion module for variables." ]
dcterms:language [ "en" ]
dc:rights [
  'Copyright 2015 RuleML Inc. -- Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.'
]
dcterms:rights [ "http://ruleml.org/licensing/RSL1.0-RuleML" ]
dcterms:relation [ "http://deliberation.ruleml.org" ]
start |= Var.Node.def
Node.choice |= Var.Node.def
# This module declares the following RuleML elements and attributes:
#            * <Var>

## terms that can be bound by a quantifier include variables.
SimpleQuantifiableTerm.choice |= Variable-node.choice

## an extension point for specializations of the variable tag name. 
Variable-node.choice |= Var.Node.def
Var.Node.def =
  
  ## A logical variable, as in logic programming.
  ## See http://deliberation.ruleml.org/1.02/glossary/#gloss-Var
  element Var { Var.type.def }
Var.type.def = (Var-datt.choice & reVar.attlist), Var.value

## Variables optionally accept the attribute pattern of objects with user-defined types.
reVar.attlist &= Type.attlist?

## The content model for variables is the XSD datatype token.
Var.value |= xsd:token
reVar.attlist &= commonNode.attlist?
