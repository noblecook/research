namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dcterms:title [ "RuleML Slotted Rest Variables" ]
dcterms:identifier [ "http://deliberation.ruleml.org/1.02/relaxng/modules/resl_expansion_module.rnc" ]
dcterms:isPartOf [ "http://deliberation.ruleml.org/1.02/spec" ]
dcterms:creator [ "http://wiki.ruleml.org/index.php/User:Athant" ]
dc:subject [ "RuleML, rest variable, slot" ]
dcterms:description [ "The expansion module for slotted rest variables." ]
dcterms:language [ "en" ]
dc:rights [
  'Copyright 2015 RuleML Inc. -- Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.'
]
dcterms:rights [ "http://ruleml.org/licensing/RSL1.0-RuleML" ]
dcterms:relation [ "http://deliberation.ruleml.org" ]
start |= resl.edge.def
# This module declares the following RuleML elements and attributes:
#            * <resl>

## an extension point for specializations of the slotted rest tag name. 
## Stripe-skipping is not allowed for slotted rest variables.  
restOfSlots-edge.choice |= resl.edge.def
resl.edge.def =
  
  ## A slotted rest variable used in <Atom>s, <Expr>s and <Plex>s. 
  ## Note that <Plex>s are generated, so <resl>s are only available above the Datalog sublanguage.
  ## See http://deliberation.ruleml.org/1.02/glossary/#gloss-resl
  element resl { resl.type.def }
resl.type.def = resl.attlist? & resl.content

## The content model of a slotted rest variable is a single term.
resl.content |= reslTerm.choice

## terms allowed in slotted rest variables. 
reslTerm.choice |= SlotSequenceMarker.choice

## Generalized lists of a restricted type are allowed terms in slotted rest variables.
reslTerm.choice |= Plex_resl-node.choice
# For the declaration of generalized lists (plexes), see the generalized list module (plex-module).

## Sequence markers are represented as ordinary variables.
SlotSequenceMarker.choice |= Variable-node.choice
# For the declaration of variables, see the quantification module (quantifier-module).
#
edge.choice |= resl.edge.def
resl.attlist &= commonInit.attlist?
